<?xml version="1.0" encoding="UTF-8"?>
<!-- XSpec file for testing ${pd}/XSLT/modules/functions_module.xslt. -->
<!-- Each function should have at least one test. -->

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
  xmlns:atop="http://www.tei-c.org/ns/atop" stylesheet="../../XSLT/modules/functions_module.xslt">

  <x:scenario label="Scenarios for testing function collapse-space">
    <x:scenario label="collapse-space with lots of spaces everywhere">
      <x:call function="atop:collapse-space">
        <x:param name="pIn_string" select="'  &#x09;this  has&#x0a; lots of   spaces   '"/>
      </x:call>
      <x:expect label="All space sequences normalized to one space." select="' this has lots of spaces '"/>
    </x:scenario>
    <x:scenario label="collapse-space with no changes required">
      <x:call function="atop:collapse-space">
        <x:param name="pIn_string" select="'this has single spaces'"/>
      </x:call>
      <x:expect label="All space sequences normalized to one space." select="'this has single spaces'"/>
    </x:scenario>
  </x:scenario>

  <x:scenario label="Scenarios for testing function minOmaxO()">
    <x:scenario label="calls to minOmaxO that should succeed">
      <x:scenario label="defaults: 0 and 1">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'00'"/>
          <x:param name="pMaxOccurs" select="' 1'"/>
        </x:call>
        <x:expect label="sequence of (0,1)" select="( 0, 1 )"/>
      </x:scenario>
      <x:scenario label="0 and sizable number">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'00'"/>
          <x:param name="pMaxOccurs" select="'17'"/>
        </x:call>
        <x:expect label="sequence of (0,17)" select="( 0, 17 )"/>
      </x:scenario>
      <x:scenario label="0 and unbounded">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'0'"/>
          <x:param name="pMaxOccurs" select="'unbounded'"/>
        </x:call>
        <x:expect label="sequence of (0,-1)" select="( 0, -1 )"/>
      </x:scenario>
      <x:scenario label="one and one">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'01'"/>
          <x:param name="pMaxOccurs" select="'1'"/>
        </x:call>
        <x:expect label="sequence of (1,1)" select="( 1, 1 )"/>
      </x:scenario>
      <x:scenario label="1 and sizable number">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select=" '1'"/>
          <x:param name="pMaxOccurs" select="'23'"/>
        </x:call>
        <x:expect label="sequence of (1,23)" select="( 1, 23 )"/>
      </x:scenario>
      <x:scenario label="1 and unbounded">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'01'"/>
          <x:param name="pMaxOccurs" select="'unbounded'"/>
        </x:call>
        <x:expect label="sequence of (1,-1)" select="( 1, -1 )"/>
      </x:scenario>
      <x:scenario label="5 and 7">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'5'"/>
          <x:param name="pMaxOccurs" select="'7'"/>
        </x:call>
        <x:expect label="sequence of (5,7)" select="( 5, 7 )"/>
      </x:scenario>
      <x:scenario label="5 and unbounded">
        <x:call function="atop:minOmaxO">
          <x:param name="pMinOccurs" select="'05'"/>
          <x:param name="pMaxOccurs" select="'unbounded'"/>
        </x:call>
        <x:expect label="sequence of (5,-1)" select="( 5, -1 )"/>
      </x:scenario>
    </x:scenario>
    <x:scenario label="calls to minOmaxO that should cause an error">
      <!-- Later. â€”Syd -->
    </x:scenario>
  </x:scenario>

</x:description>
