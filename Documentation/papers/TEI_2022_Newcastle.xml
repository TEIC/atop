<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_jtei.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_jtei.rng" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" rend="jTEI" xml:lang="en">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title type="main">ATOP</title>
        <title type="sub">Another TEI ODD Processor</title>
        <author xml:id="SB">
          <name>
            <forename>Syd</forename>
            <surname>Bauman</surname>
          </name>
          <affiliation>
            <roleName>Senior XML Programmer/Analyst</roleName>
            at the
            <orgName>Northeastern University Digital Scholarship Group</orgName>
          </affiliation>
          <email>s.bauman@northeastern.edu</email>
        </author>
        <author xml:id="MH">
          <name>
            <forename>Martin</forename>
            <surname>Holmes</surname>
          </name>
          <affiliation>
            <roleName>Programmer/Consultant</roleName>
            at the
            <orgName>Humanities Computing and Media Centre</orgName>
            at the
            <orgName>University of Victoria</orgName>
          </affiliation>
          <email>mholmes@uvic.ca</email>
        </author>
        <author xml:id="HBS">
          <name>
            <forename>Helena</forename>
            <surname>Bermúdez Sabel</surname>
          </name>
          <affiliation>
            <roleName>Independent scholar</roleName>
          </affiliation>
          <email>helena.b.sabel@gmail.com</email>
        </author>
        <author xml:id="DM">
          <name>
            <forename>David</forename>
            <surname>Maus</surname>
          </name>
          <affiliation>
            <roleName>Head of Research &amp; Development</roleName> at the <orgName>State- and
              University Library Hamburg</orgName>
          </affiliation>
          <email>david.maus@sub.uni-hamburg.de</email>
        </author>
      </titleStmt>
      <publicationStmt>
        <publisher>TEI Consortium</publisher>
        <date>2023</date>
        <availability>
          <licence target="https://creativecommons.org/licenses/by/4.0/">
            <p>For this publication a Creative Commons Attribution 4.0 International license has
              been granted by the author(s) who retain full copyright.</p>
          </licence>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>No source, born digital.</p>
      </sourceDesc>
    </fileDesc>
    <encodingDesc>
      <projectDesc>
        <p>OpenEdition Journals -centre for open electronic publishing- is the platform for journals
          in the humanities and social sciences, open to quality periodicals looking to publish
          full-text articles online.</p>
      </projectDesc>
      <appInfo>
        <application ident="TEIGarage" version="1.1.1">
          <desc> A <ref target="https://annuel2.framapad.org/p/TEI_ATOP_jTEI_2022_(Newcastle)_paper"
              >Framapad document</ref> was used as the original scratch pad for writing this paper.
            It was converted to Markdown using the Framapad export feature. That Markdown was
            converted to rudimentary TEI by TEIGarage 11.0.16+8, 1.1.1. </desc>
        </application>
      </appInfo>
    </encodingDesc>
    <profileDesc>
      <langUsage>
        <language ident="en">English, mostly using American spellings</language>
      </langUsage>
      <textClass>
        <keywords>
          <?ATOP check terms, for sure ?>
          <term>TEI</term>
          <term>ODD</term>
          <term>ATOP</term>
          <term>XSLT</term>
          <term>Stylesheets</term>
        </keywords>
      </textClass>
    </profileDesc>
    <revisionDesc>
      <change who="#SB" when="2023-04-14T12:00:00">Started conversion to jTEI</change>
      <change who="#SB" when="2023-04-14T11:30:00">Converted to TEI using TEIGarage</change>
      <change who="#SB" when="2023-04-14T11:00:00">Finalized some edits in Framapad</change>
      <change who="#MH #HBS #DM" from="2023-04-09" to="2023-04-13">Edited and made suggestions in
        Framapad</change>
      <change who="#SB" when="2023-04-08">Wrote bulk of paper in Framapad</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <front>
      <div type="abstract" xml:id="abstract">
        <?ATOP to be written — should be 1 or 2 <p> elements 
        HBS: I added a very rough draft
        SB: Wow, nicely done! ?>
        <p>The TEI XSL Stylesheets is a tool that tackles the transformation of TEI XML documents to
          (and from) various formats. This includes the crucial activity of generating schemas from
          TEI ODD, the TEI XML-conformant specification format that allows one to write a schema language
          (for example, TEI P5 itself is written in ODD) or to customize TEI P5 in
          a literate programming fashion. Due to the difficulties of maintaining this current set of
          Stylesheets, a Task Force was created with the mission of developing, from scratch, an ODD
          processor that reads in a series of one or more TEI ODD customization files, merges them with a TEI
          language (likely, but not necessarily, TEI P5 itself), and generates RELAX NG and
          Schematron schemas. This paper presents a rationale of this task and the initial steps of
          this work.</p>
      </div>
    </front>
    <body xml:id="atop">
      <head>ATOP: Another TEI ODD Processor</head>
      <p>This paper is an introduction to a new TEI enterprise to create a utility for generating
        schemas (RELAX NG and Schematron) from descriptions of encoding systems written in TEI ODD,
        including chaining (i.e., customizations, customizations of customizations, customizations
        of customizations of customizations, etc.). The first section is a review of what TEI ODD is
        and an overview of how it is currently processed. The second section will address why this
        is an important endeavor, explain how it came to be, and describe the very limited intended
        goals. The third section discusses how the work is taking place and where it can be found.
        The fourth section addresses the decisions we have made so far.</p>
      <div xml:id="disclosures">
        <head>Disclosures</head>
        <p>Two of the authors are currently members of the TEI Council. A third is the author of
          SchXslt ([ʃˈɛksl̩t] – An XSLT-based Schematron processor), mentioned herein, which is
          quickly becoming the favorite Schematron processor not just in the TEI community, but in
          much of the XML world. The fourth is the author of the first paper to directly address the
          problem head-on,[A] and thus spurred the entire endeavor. Thus in one way or another, each
          of us has a vested interest in the success of this project.</p>
      </div>
      <div xml:id="rev">
        <head>TEI ODD processing — a review</head>
        <p>The TEI system is, in general, a tagset for describing the structure of, and other
          interesting bits about, extant texts. While it is intended to promote the
          interchangeability and processability of transcriptions of texts of interest to humanities
          scholars, it can be used for a variety of other text encoding purposes. For example, this
          paper is written in TEI. But a portion of the TEI system (chapter 22 of the <hi
            rend="italic">Guidelines</hi>) is dedicated not to describing extant texts, but rather
          to describing markup languages intended for describing extant texts (or anything else, for
          that matter). Thus, because TEI is currently represented in XML, ODD has elements and
          attributes for describing an XML encoding language. For example, ODD has constructs
          for:</p>
        <list rend="bulleted">
          <item>describing elements and their attributes;</item>
          <item>providing content models for elements;</item>
          <item>constraintiung attribute values, including with controlled vocabularies;</item>
          <item>providing examples and discussion of the use of elements and attributes;</item>
          <item>organizing elements and attributes into classes, for easier use.</item>
        </list>
        <p>The TEI system itself is, of course, described using this sub-system, which is
          affectionately called ODD (see <ref target="#burnard2004" type="bibl">Burnard and Rahtz
            2004</ref>, <ref target="#burnard2013a" type="bibl">Burnard and Rahtz 2013a</ref>, <ref
            target="#burnard2013b" type="bibl">Burnard and Rahtz 2013b</ref>, <ref target="#teicODD"
            type="bibl">TEI Consortium n.d.</ref>).</p>
        <p>While ODD can be used for a variety of purposes, its two main uses are 1) defining the
          TEI Guidelines, and 2) creating customizations thereof. (See <ref type="bibl"
            target="#bauman2019">Bauman 2019</ref>) The remainder of this section is an overview of
          the current system for generating schemas and documentation from TEI ODD customization
          files.</p>
        <p>The TEI Guidelines are written in TEI ODD. That is, the source for the Guidelines you
          read on the web or via an ePub or PDF viewer is a single TEI document. It has a
            <gi>TEI</gi> start-tag at the beginning, a <gi>TEI</gi> end-tag at the end, and a
            <gi>teiHeader</gi> just like any other TEI document. It is filled with <gi>div</gi>,
            <gi>head</gi>, and <gi>p</gi> elements as you might expect. But it also contains
            <gi>elementSpec</gi> elements for describing elements and <gi>moduleSpec</gi> elements
          for grouping those element specifications, and a host of other constructs dedicated to
          describing an XML markup language in detail. This single TEI document is stored in over
          800 separate files for the convenience of those maintaining the TEI, but those files
          comprise a single TEI document.</p>
        <p>This single TEI document that defines an XML language is not intended to be used on its
          own, however. This is in large part because the TEI covers many fields of study, and a
          user from one field may not be interested in the TEI elements and attributes that support
          another. Thus a customization file — also written in TEI ODD — is used in conjunction with
          the TEI Guidelines. The customization file expresses which bits of the TEI will be used,
          and which will not, and adds additional explanations, constraints, and examples where
          needed. One of the most well-known customizations is TEI Lite, a large and complex
          customization that produces a slimmed-down version of the TEI intended <quote
            source="#teiLite">to meet 90% of the needs of 90% of the TEI user community</quote>
            (<ref target="#teicFAQ" type="bibl" xml:id="teiLite">TEI Consortium 2023: What is TEI
            Lite?</ref>). A customization that is very commonly used for experimentation (but not
          appropriate for use in actual encoding projects) is TEI All, a very small customization
          that simply says <q>use all bits of TEI without any further explanations, examples, or
            constraints</q>.</p>
        <p>Given a TEI customization, two of the main tasks we wish to accomplish are to convert the
          combination of the TEI customization and the TEI source document into 1) customized
          documentation and 2) usable schemas. Customized documentation is a version of the TEI
          Guidelines, or at least of the reference section, that reflects the changes expressed in
          the customization ODD. For example, if the customization ODD says <q>I only need the
            required modules plus the <gi>metDecl</gi> element</q> — i.e., it does not include the
          specialized modules for drama, feature structures, manuscript description, etc., then only
          ~61 different element types would be listed as possible children of <gi>p</gi>, and only
          ~197 as members of the class att.global. This makes documentation much easier to read when
          compared to to TEI All, in which ~207 elements would be listed as possible children of
            <gi>p</gi>, and ~590 as members of the class att.global.</p>
        <p>We need to generate usable schemas from the TEI system because no software exists that
          will directly validate a document against an XML language written in TEI ODD, let alone
          provide assistance in writing a document that conforms to it. The TEI ODD language is
          specifically designed to be converted to schema languages for which such software is
          commonly available: RELAX NG (for the closed schema language constructs) and ISO
          Schematron (for the open schema language constructs). Furthermore, the ODD language can be
          converted to other languages. (In particular, the Stylesheets will convert the closed
          schema language constructs into the W3C XML Schema Language or to the DTD language from
          the XML specification.)</p>
        <p>Following the principles of literate programming (<ref target="#knuth1984" type="bibl"
            >Knuth 1984</ref>), the process of generating custom documentation from a customization
          file and the TEI Guidelines is called <hi rend="italic">weaving</hi>, and the process of
          generating schemas is called <hi rend="italic">tangling</hi>. The TEI Consortium provides
          software (called <name>roma</name>, not to be confused with <name>Roma</name> [linked to
          new Roma], the web interface to that software) which performs these tangle and weave
          functions. See Figure 1. [Picture from slide 2]</p>
      </div>
      <div xml:id="hx">
        <head>History — who, what, and why</head>
        <p>The software currently used to convert TEI ODD into custom documentation and custom
          schemas is a large set of XSLT stylesheets commonly referred to by the somewhat
          <?ATOP (insouciant | blasé | lackadaisical | passionless | spiritless ) ?> name <name>the
            TEI Stylesheets</name>. (You might think they are called that because the name of the
          GitHub repository where they live is <name>Stylesheets</name>, but in fact the repo is
          named after the software.) The Stylesheets also convert TEI into many other formats
          (including DocBook, HTML, PDF, NLM, OpenDocument), and many of those formats into TEI.
          These Stylesheets <ref target="https://github.com/TEIC/Stylesheets/"
            >[https://github.com/TEIC/Stylesheets/</ref>] are both a work of genius (the genius of
          Sebastian Rahtz, to be precise) and somewhat of an obstacle to the growth of the TEI
          language. The Stylesheets are very impressive in that they perform a large set of
          intricate tasks reasonably well, and in that they were written amazingly fast. But they
          are very difficult to maintain. The source of the problem was summed up by Holmes in 2021:
            <quote source="#holmes">Sebastian was such a genius he really found it impossible to
            imagine how dim the rest of us actually are.</quote>. For a detailed discussion of the
          problems the Stylesheets pose see the rest of Holmes’ paper (<ref type="bibl"
            target="#holmes2021" xml:id="holmes">Holmes 2021</ref>). But to summarize here for our
          purposes:</p>
        <list rend="bulleted">
          <item>The Stylesheets are <hi rend="bold">very</hi> complex. <list>
              <item>This is in large part because they do a <hi rend="bold">lot</hi> more than
                convert TEI ODD into custom documentation and custom schemas, which are the core
                activities the TEI Council needs to support.</item>
            </list></item>
          <item>They are written in an outdated dialect of XSLT (basically XSLT 1.0 with a few 2.0
            constructs).</item>
          <item>They are full of redundancy (e.g., there are two functions,
              <code>whatsTheDate()</code> and <code>tei:whatsTheDate()</code>, that do exactly the
            same thing).</item>
          <item>They are almost completely undocumented.</item>
        </list>
        <p>Thus fixing bugs, let alone adding new features, to the Stylesheets is quite difficult,
          in part because it is very difficult to be confident that a bug fix does not cause other
          problems. Furthermore, it is common to find new bugs when fixing known bugs. David Maus
          went so far as to say in an issue comment <quote source="#comment">I consider the
            Stylesheets as broken beyond repair. They work … to a certain degree[,] but they are,
            from my point of view, effectively unmaintainable.</quote> (<ref target="#maus2021"
            type="bibl" xml:id="comment">Maus 2021</ref>)</p>
        <p>The natural consequence to the Stylesheets being simultaneously so difficult to maintain
          and being so central to the TEI Technical Council’s mission is that the Council spends a
          lot of its time trying to fix bugs in the Stylesheets. There is a monthly meeting devoted
          to the task, and it is not nearly enough. It is worth mentioning, though, that people
          other than those on Council can contribute to the Stylesheets. In fact, the Stylesheets
          repository was deliberately (and some would say unwisely) separated from the repository
          used for the TEI Guidelines themselves in order to encourage and foster work on the
          Stylesheets by programmers other than those on Council. This has not been entirely
          successful, though. Fewer than 4% of commits to the dev branch are by people who have
          never served on Council.</p>
        <p>Two of the authors (Bauman and Holmes) had been fantasizing about re-writing the
          Stylesheets from scratch for several years. In 2021 at the virtual TEI conference Holmes
          presented the paper cited above, laying out the argument that the Stylesheets are becoming
          a hindrance to progress within the TEI. It seemed that most Council members were quite
          sympathetic to Holmes’ position. Bauman saw this as an opportunity, and asked Council to
          create a task force for the purpose of creating a new ODD processor from scratch that
          generates RELAX NG and Schematron schemas from the ODD language. This deliberately left
          out many of the tasks the Stylesheets perform. However, Council feels that the only tasks
          performed by the Stylesheets that are core parts of its mission are generation of the
          Guidelines themselves, and generation of custom documentation and schemas. But even
          considering only those 3 core tasks, 2 are not covered by the charge to the new task
          force. This is for a variety of reasons, the largest of which is that another group will
          be tackling (or more likely, by the time you read this, has tackled) the other activities
          that are part of Council’s core mission: generating the Guidelines themselves and
          generating customized documentation.</p>
        <p>Thus ATOP will be an ODD processor that takes as input a chain of one or more ODD files
          and produces as output both a RELAX NG schema (representing the grammar expressed by the
          chained ODDs) and an ISO Schema (representing the additional ISO Schematron constraints in
          the chained ODDs), although the Schematron may be embedded in the RELAX NG, thus creating
          only a single file of output. That is to say ATOP will not even perform ODD to DTD or ODD
          to W3C Schema processing, let alone TEI Lite to ePub3, DOCX to TEI, or
          ODD-with-Processing-Model to stylesheets.</p>
      </div>
      <div xml:id="work">
        <head>Work processes</head>
        <p>Work on ATOP is being performed by a task force that consists of the four authors. While
          we have no hard limit to how often or how rarely we meet, so far we have been meeting for
          1 hour per week via videoconference call (with screen share capability), and have found
          this pace quite comfortable. We have deliberately set no hard deadlines for ourselves,
          purposefully putting the goal of maintainable code over and above the goal of finishing
          our work rapidly. (After all, the world has been making due with the current Stylesheets
          for many years). We have an aspirational goal of having working code for Council to start
          testing in summer 2023, and an initial full release by the end of 2023. However, it will
          neither surprise us nor upset us if we do not meet those temporal goals.</p>
        <p>So far almost all work takes place on a TEIC GitHub repository (<ref
            target="https://github.com/TEIC/atop">https://github.com/TEIC/atop)</ref>). This
          repository includes the code (including tests), issues \&amp; pull requests, a glossary of
          terms, documentation of goals, namespaces, error codes, etc., and minutes of our
          meetings.</p>
        <p>We also occasionally make use of a dedicated channel in the TEI Slack space.</p>
      </div>
      <div xml:id="plans">
        <head>Plans and progress</head>
        <div xml:id="comparison">
          <head>Comparison to current process</head>
          <p>The current Stylesheets include over 330 XSLT files; of those only ~25–33 are part of
            the process we are duplicating. However, the division of labor among these is, at best,
            confusing, and has been described (several years after the death of the primary author)
            on a TEI wiki page (<ref
              target="https://wiki.tei-c.org/index.php?title=Mapping\_ODD\_processing"
              >https://wiki.tei-c.org/index.php?title=Mapping\_ODD\_processing)</ref>).</p>
          <p>Another problem with the current suite is inconsistent terminology. In order to try to
            avoid this pitfall, we agreed to (and are are trying to stick to) a defined glossary of
            terms that we develop within the first month of the project (<ref
              target="https://github.com/TEIC/atop/wiki/Terminology"
              >https://github.com/TEIC/atop/wiki/Terminology)</ref>).</p>
          <p>We anticipate that ATOP will not be <hi rend="italic">nearly</hi> as complicated as the
            current suite, in large part because it will do so much less. It <hi rend="italic"
              >may</hi> end up as complicated as the portion of the current suite that handles the
            same process, but probably not; and even if it does, it will be well-documented, clear,
            comparatively easy-to-understand code.</p>
        </div>
        <div xml:id="workflow">
          <head>Workflow</head>
          <p>Our intended workflow will involve at least four stages. See figure 2. [Picture from
            slide 23.] Each stage will likely begin with a validation step. In most cases invalidity
            would result in the entire process being aborted. There may be some cases for which a
            warning will be issued and processing continues. One advantage to this methodology is
            that we will, by necessity, generate a rigorous definition of a derived ODD file and of
            a Pruned Localized ODD (PLODD). It may mean that intermediate files need be written out
            at every stage (which some might consider a disadvantage); however, writing those
            intermediate files will be very useful in debugging the system.</p>
          <list>
            <item>Stage 1: <hi rend="bold">Assemble customization ODD</hi> — References to external
              components, if any are read into the ODD; prose may be dropped at this stage (but most
              metadata and all glosses and descriptions are kept).</item>
            <item>Stage 2: <hi rend="bold">Customization ODD + Base ODD → Derived ODD </hi>— The
              output of stage 1 is read in and whatever base ODD it refers to is validated and read
              in. The ODDs are are combined by following the instructions in the assembled
              customization ODD and applying them to the base ODD. All internationalization
              information (i.e., all languages of glosses, descriptions, and alternate identifers)
              is kept. The output is referred to as a <term>derived ODD</term>.</item>
            <item>Stage 3: <hi rend="bold">Customization ODD + Derived ODD → Derived ODD</hi> — This
              stage is very similar to stage 2, except that the customization ODD used is the next
              ODD in the chain, and the output of the previous stage is used as if it were the base
              ODD. This stage is repeated 0 or more times as needed.</item>
            <item>Stage 4: <hi rend="bold">Derived ODD → Pruned Localized ODD</hi> — The output of
              the last stage is read in. It is pruned, in that most if not all information that is
              not needed for creation of a schema is removed. It is localized, in that all but one
              language for each set of glosses, descriptions, and alternate identifiers is selected,
              and the rest are removed. The output is referred to as a PLODD.</item>
            <item>Stage 5: <hi rend="bold">PLODD → RELAX NG + Schematron</hi> — The output of the
              previous stage is validated and (if it passes) read in, and transpiled into a RELAX NG
              schema with embedded ISO Schematron rules.</item>
          </list>
          <p>The user is welcome to try to convert the RNG to DTD or XSD, but such is out of scope
            for ATOP; our goal is only generation of RELAX NG and Schematron.</p>
        </div>
        <div xml:id="consistency">
          <head>Consistency and Conventions</head>
          <p>We have spent some time developing a set of coding conventions to help ensure
            consistency of the code we produce. When the topic of consistency comes up, one often
            hears the famous quotation from Ralph Waldo <ref type="bibl" target="#emerson"
              xml:id="self-reliance">Emerson’s 1841</ref> essay <title>Self-Reliance</title>, that
              <quote source="#self-reliance">consistency is the hobgoblin of little minds</quote>.
            First off, Emerson was not a computer programmer. Second, he was not talking about
            consistency in notation, or that 2+2 consistently is 4, or if there should be a
            consistent left margin on a printed page. Third, he was not even suggesting that
            consistency itself is bad, only that a desire to be consistent should not thwart one
            from changing one’s mind or expressing a point of view contradictory to a previous point
            of view, as is evident from the entire quotation: <quote source="#self-reliance">A
              foolish consistency is the hobgoblin of little minds, adored by little statesmen and
              philosophers and divines. With consistency a great soul has simply nothing to do. He
              may as well concern himself with his shadow on the wall. Speak what you think now in
              hard words, and to-morrow speak what to-morrow thinks in hard words again, though it
              contradict every thing you said to-day. — <q>Ah, so you shall be sure to be
                misunderstood.</q> — Is it so bad, then, to be misunderstood? Pythagoras was
              misunderstood, and Socrates, and Jesus, and Luther, and Copernicus, and Galileo, and
              Newton, and every pure and wise spirit that ever took flesh. To be great is to be
              misunderstood.</quote></p>
          <p>Our desired consistency is not that of philosophy or religion, but mostly that of
            naming and usage. For example, if a subroutine is going to return a node, we use a
            template for that routine; if it does not, we use a function.</p>
          <p>We are using XML validation technology (in particular, Schematron) to enforce
            consistency in our own coding conventions:</p>
          <list>
            <item>of variable names (e.g., <code>$atop:vVersion</code>)</item>
            <item>of parameter names (e.g., <code>$atop:pPatternPrefix</code>,
                <code>$atop:tpFun</code>)</item>
            <item>of function names (e.g., <code>atop:unique-ident()</code>)</item>
            <item>in global use of <code>@as</code> attribute</item>
            <item>to require internal documentation</item>
          </list>
        </div>
        <div xml:id="testing">
          <head>Component testing</head>
          <p>We plan to test each component rigorously while it is being developed. This will
            involve developing an XSpec suite to test functions and named templates, and perhaps for
            larger components. We also anticipate having a sizeable suite of test ODDs. We have
            already gathered, in response to a request on TEI-L, well over 50 customization ODDs
            written by TEI users — our <hi rend="italic">in vivo</hi> test suite. In addition we
            plan to generate both language ODDs and customization ODDs specifically designed to test
            particular features of the ODD language — our <hi rend="italic">in vitro</hi> test
            suite. Furthermore, since we have (deliberately) written the stage 5 program first, we
            are writing another <hi rend="italic">in vitro</hi> test suite for processing of
            PLODDs.</p>
          <p>When testing the final RELAX NG result, we plan to perform both comparison testing
            (checking that the output file matches a previously agreed upon expected
            output file) and behavioral testing
            (checking that the output file flags a known to be correct file as valid, and a known to
            be incorrect file as invalid). The latter is necessary because there are often multiple
            RELAX NG patterns that will match the same XML constructs. For example, the content
            models <code>( blort+ )</code>, <code>( blort, blort* )</code>, and <code>( blort,
              blort?, blort* )</code> all mean the same thing: <q>one ore more
            <gi>blort</gi>s</q>.</p>
        </div>
      </div>
      <div xml:id="deliverables">
        <head>Deliverables</head>
        <p>The main deliverable will be a set of XSLT programs that convert a chain of one or more
          ODDs into RELAX NG and Schematron. Ancillary deliverables will be a driver or glue program
          for an end-user to run, a schema with which to test the input document(s), a schema with
          which to test the intermediate document(s) (although they may be hidden from the user
          unless she asks for them), and documentation of the entire system. Each of these will, of
          course, be FLOSS, probably under the same license as other TEI software.</p>
        <p>The main programs will be written in XSLT 3 (using XPath 3.1) without any extended
          functionality. Even if and when XSLT 4 is available, we plan to stick with XSLT 3. These
          programs should run in any standard XML-friendly environment, including the GNU/Linux
          commandline and oXygen. We make use of oXygen, and the end product should run quite nicely
          in oXygen, but nothing should <hi rend="italic">require</hi> oXygen.</p>
        <p>The <soCalled>glue</soCalled> or <soCalled>driver</soCalled> program that
          tests the input and runs the required XSLT programs in the right order will
          probably be written in ant or XProc.</p>
      </div>
      <div xml:id="foreshadowing">
        <head>Side effects (and foreshadowing)</head>
        <p>It is not surprising that our work runs into places where ODD must be more cleanly
          specified. E.g., there is no mechanism in the ODD language for a user to specify the query
          binding language used in her Schematron contexts and tests. We are raising issues in the
          TEI (<ref target="https://github.com/TEIC/TEI/labels/atop"
            >https://github.com/TEIC/TEI/labels/atop)</ref>) and Stylesheets (<ref
            target="https://github.com/TEIC/Stylesheets/labels/atop"
            >https://github.com/TEIC/Stylesheets/labels/atop)</ref>) GitHub repositories as we go.
          In some cases our findings will likely result in changes that require fixes to previous
          Stylesheets. Furthermore, we are proposing a paper for the 2023 TEI Conference in
          Paderborn that focuses on these issues.</p>
      </div>
    </body>
    <back>
      <div type="bibliography" xml:id="bibl">
        <head>Bibliography</head>
        <listBibl>
          <bibl xml:id="bauman2019"><author>Bauman, Syd</author>
            <date>2019</date>. <title level="a">A TEI Customization for Writing TEI
              Customizations</title>. <title level="j">Journal of the Text Encoding
              Initiative</title>, Issue 12. doi:10.4000/jtei.2573.</bibl>
          <bibl xml:id="burnard2004"><author>Burnard, Lou</author>, and <author>Rahtz,
              Sebastian</author>
            <date>2004</date>. <title level="a">RelaxNG with Son of ODD</title>. Presented at the
            Extreme Markup Languages 2004, Montreal, QC, Canada, August 2.</bibl>
          <bibl xml:id="burnard2013a"><author>Burnard, Lou</author>, and <author>Rahtz,
              Sebastian</author>
            <date>2013</date>. <title level="a">Reviewing the TEI ODD system</title>. <title
              level="m">DocEng ’13: Proceedings of the 2013 ACM symposium on Document engineering
              September 2013</title>, 193–196. <ref target="https://doi.org/10.1145/2494266.2494321"
              >https://doi.org/10.1145/2494266.2494321</ref>.</bibl>
          <bibl xml:id="burnard2013b"><author>Burnard, Lou</author>, and <author>Rahtz,
              Sebastian</author>
            <date>2013</date>. <title level="a">A complete schema definition language for the Text
              Encoding Initiative</title>. In <title level="m">Proceedings of XML London
              2013</title>. Presented at XML London 2013, June 15-16th, 2013. <ref
              target="https://dx.doi.org/10.14337/XMLLondon13.Rahtz01"
              >https://dx.doi.org/10.14337/XMLLondon13.Rahtz01</ref>.</bibl>
          <bibl xml:id="emerson">Emerson, Ralph Waldo <date>1907</date>. <title level="a"
              >Self-Reliance</title>. In <title level="m">Essays</title>. Edited by Edna H. L.
            Turpin. New York: Charles E. Merrill Co. Retrieved from Project Gutenberg. <ref
              target="https://www.gutenberg.org/files/16643/16643-h/16643-h.htm#SELF-RELIANCE"
              >https://www.gutenberg.org/files/16643/16643-h/16643-h.htm#SELF-RELIANCE</ref>.</bibl>
          <bibl xml:id="holmes2021"><author>Holmes, Martin</author>
            <date>2021</date>. <title level="a">Are the TEI Stylesheets really broken beyond
              repair?</title>. Text Encoding Initiative Conference (Online), 25/10/2021. <ref
              target="https://zenodo.org/record/6522554"
            >https://zenodo.org/record/6522554</ref>.</bibl>
          <bibl xml:id="knuth1984"><author>Knuth, Donald E.</author>
            <date>1984</date>. <title level="a">Literate Programming</title>. <title level="j">The
              Computer Journal</title>. British Computer Society. 27 (2): 97–111. <idno type="DOI"
              >10.1093/comjnl/27.2.97</idno>. <ref
              target="http://www.literateprogramming.com/knuthweb.pdf"
              >http://www.literateprogramming.com/knuthweb.pdf</ref>.</bibl>
          <bibl xml:id="maus2021"><author>Maus, David</author>
            <date>2021</date>
            <ref target="https://github.com/TEIC/Stylesheets/pull/477#issuecomment-805138553"
              >https://github.com/TEIC/Stylesheets/pull/477#issuecomment-805138553</ref>.</bibl>
          <bibl xml:id="teicODD"><author>TEI Consortium</author>
            <date>n.d.</date>. Getting Started with P5 ODDs. <ref
              target="https://tei-c.org/guidelines/customization/getting-started-with-p5-odds/"
              >https://tei-c.org/guidelines/customization/getting-started-with-p5-odds/</ref>.</bibl>
          <bibl xml:id="teicFAQ"><author>TEI Consortium</author>
            <date>n.d.</date>. Frequently Asked Questions. <ref
              target="https://tei-c.org/about/frequently-asked-questions/"
              >https://tei-c.org/about/frequently-asked-questions/</ref>.</bibl>
        </listBibl>
      </div>
    </back>
  </text>
</TEI>
